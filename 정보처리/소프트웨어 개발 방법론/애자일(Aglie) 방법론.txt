    소프트웨어 개발 방법론

    애자일 방법론 등장 배경
-유저의 요구사항이 빈번하게 변경되 새로운 방법론이 필요
-계획 없는 개발 방법 경우, 선행작업 예측이 힘들고 효율적이지 못함
-계획이 지나치게 많은 방법론이면 형식적인 절차를 따르는 비용
전체적인 개발의 흐름 자체를 느리게 하는 단점
-애자일은 개발 과정의 어려움을 극복하기위해 적극적으로 모색한 방법론

    액자일 방법론의 정의
-요구사항, 설계, 구현, 시험의 단꼐를 통해 개발하는 방법론
-계획이 없가나 계획이 지나치게 많은 게발방법에서 타협점 찾은 방법론
-요구사항을 지속적으로 분석하고 반영하여 시간 지연 최소화 방법론

    애자일 방법론의 특징
-개발 과정의 소통을 중요하게 생각하는 소프트웨어 개발 방법론 으로 반복적인 개발을 통한 잦츤 출시
-기존의 모형 문제점 보안(폭포수, 프로토타입, 나선형 모형)
-소프트웨어을 점증적 개발
-출시 주기를 짧게 다양한 요구 변화 대응
-고객과 개발팀의 소통, 개발팀원 간의 소통, 협력 극대화
-인간의 수행 능력을 높이기 위한 현실적 방법 제시
-가볍고 실용적인 개발 방법론

    애자일 방법론의 선언문
-애자일 모형의 도입으로 프로세스와 도구 문서 작업, 게약의 협상, 계획의 수행을
무시하는것이 아님 주의
-대형화, 복잡한 개발 방법론 보다는 현실적이고 가벼운 소프트웨어 개발을 지지하는 
애자일 방법론 지지들이 모여 4가지 애자일 선언문 발표
{
    개인과 상호작용을 프로세스와 도구보다 중시
    동작하는 소프트웨어를 포괄적인 문서보다 중시
    고객과의 협력을 계약의 협상보다 중시
    변화의 대응을 게획의 수행보다 중시
}

    애자일 방법론의 원칙
1. 소통 > 알기 쉬운 차트, 정보 공유, 회의 
2. 협력 > 개발팀 협조, 고객과의 문제 대화 해결
3. 적응 > 변화 수용, 융통성 발휘
4. 지속 > 검증 반복, 점증 개발 
5. 가치 전달 > 위험도 높은 작업 우선, 비용 감소
6. 피드백 > 자주 출시, 고객 평가

    애자일 방법론 5가지 가치
의사소통 : 개발팀이 발전적인 방향으로 존속하는데 있어서 가장 중요한 가치
용기 : 말하고 요청하는 용기, 소프트우[어 개발시 커다란 미지의 두려움과 마주할때 가치
피드백 :  소프트웨어 개발, 커다란 미지의 두려움에 마주할때의 가치
단순함 : 복잡한 방식으로 개발하는 것이 아닌 간결하고 단순하게 개발하여 어려움 해소
존경 : 모든 가치를 추구하는 과정애서 유지

    XP(eXtreme Programming)
-소프트웽어 개발 방식을 애자일 모형으로 개발하는 대표 방법
-변경 추구, 소프트웨어 검사 병행 강력 권고 하는 방법론
-의사소통의 개선과 즉각적인 피드백에 의한 단순한 코딩으로 소프트웨어 품질 향상
